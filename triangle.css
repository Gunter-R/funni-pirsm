:root {
    --a: 20vmin;
    --b: 20vmin;
    --c: 20vmin;
    --h: 30vmin;

    --left: 0;
    --right: 0;
    --height: 0;

    --c-angle: 0;
    --b-angle: 0;
}


*, *:before, *:after {
    transform-style: preserve-3d;
}

html, body {
    width: 100%;
    height: 100%;
    margin: 0;
}

body {
    display: flex;
    flex-direction: column;
    align-items: center;
    transform: translateZ(1000px);
}

.slider-container {
    position: fixed;
    bottom: 0;
    width: 80vw;
    font-size: 2rem;
}

.slider-container > * {
    display: flex;
    align-items: center;
    justify-content: center;
    margin: 5px;
    height: 100px;
}

.slider {
    flex: 1;
}

form {
    margin: 10px;
    position: fixed;
    right: 0;
    display: flex;
    gap: 5px;
    flex-direction: column;
    align-items: center;
    font-size: 2rem;
}

input {
    font-size: 2rem;
}

input[type="number"] {
    appearance: textfield;
    width: 3ch;
}

input:invalid {
    border: solid 3px red;
    background-color: rgba(255, 0, 0, 0.1);
}

.scene {
    margin: 10vh 0 0;
    width: var(--a);
    height: calc(var(--height));
    perspective: 1000px;
}

.prism {
    width: 100%;
    height: 100%;
    transform-origin: calc(var(--a) / 2) calc(var(--h) / 2) calc(0px - var(--height) / 2);
    transition: transform 0.5s;
}

.face {
    position: absolute;
    outline: 1px solid transparent;
}


.triangle {
    width: 0;
    height: 0;
    border-style: solid;
    border-color: transparent transparent rgba(0, 255, 0, 0.3) transparent;
    border-width: 0 var(--right) var(--height) var(--left);
    transform-origin: center bottom;

}

.rectangle {
    border: solid 1px black;
    height: var(--h);
    background-color: rgba(255, 0, 0, 0.3);
}

.face:nth-of-type(1) {
    width: var(--a);
    transform: rotateY(0deg);
}

.face:nth-of-type(2) {
    transform-origin: center right;
    width: var(--b);
    transform: translateX(calc(var(--a) - var(--b))) rotateY(calc(0deg - var(--c-angle)));
}

.face:nth-of-type(3) {
    width: var(--c);
    transform-origin: center left;
    transform: rotateY(calc(var(--b-angle)));
}

.face:nth-of-type(4) {
    transform: rotateX(90deg) translateZ(calc(var(--height)));
}

.face:nth-of-type(5) {
    transform: rotateX(90deg) translateZ(calc(calc(var(--height)) - var(--h) - 2px));
}
